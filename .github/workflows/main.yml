name: Test infrastructure (Checkov)

on:
  push:
    branches: [ main ]

jobs:
#   deploy:
#     runs-on: self-hosted

#     steps:
# #      - uses: actions/checkout@v2

#       - name: cdk help
#         run: cdktf help

#       - name: cdktf version
#         run: cdktf --version
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Test with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ASA/AWS/Terraform/ASA_A_A_Multiple_AZ
          framework: terraform 
          
      - name: Test with Checkov Azure
        if: always()
        uses: bridgecrewio/checkov-action@master
        with:
#           directory: ASA/AWS/Terraform/ASA_A_A_Multiple_AZ
          directory: .
          framework: terraform 
  
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build Docker image
      run: "echo **/*.tf | xargs dirname | sort -u"
      
    - name: Render terraform docs inside the USAGE.md and push changes back to PR branch
      uses: Dirrk/terraform-docs@v1.0.8
      with:
        tf_docs_find_dir: .
#        tf_docs_working_dir: FMC/
        tf_docs_output_file: USAGE.md
        tf_docs_output_method: inject
        tf_docs_git_push: 'true'
        
  validate:
    runs-on: ubuntu-latest
    name: Validate terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform validate
        uses: dflook/terraform-validate@v1
        id: validate
        with:
          path: ASA/AWS/Terraform/ASA_A_A_Multiple_AZ

      - name: Validate failed
        if: ${{ failure() && steps.validate.outputs.failure-reason == 'validate-failed' }}
        run: echo "terraform validate failed"
        
  format-terraform:
    runs-on: ubuntu-latest
    name: Check terraform file are formatted correctly
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform fmt
        uses: dflook/terraform-fmt@v1
        with:
          path: .

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v2
        with:
          commit-message: terraform fmt
          title: Reformat terraform files
          body: Update terraform files to canonical format using `terraform fmt`
          branch: automated-terraform-fmt
#   build-docs:
#     runs-on: ubuntu-latest
#     if: "!contains(github.event.head_commit.message, '[ci skip]')"
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#           ref: ${{ github.event.pull_request.head.ref }}
#           repository: ${{ github.event.pull_request.head.repo.full_name }}

#       - name: Build Docker image
#         run: |
#           VERSION=$(grep "docker://quay.io/terraform-docs/gh-actions" action.yml | cut -d: -f4 | sed 's/"//g')
#           docker build --pull --tag quay.io/terraform-docs/gh-actions:${VERSION} .
#       - name: Should generate USAGE.md for tf11_basic
#         uses: actions/checkout@v2
#         with:
#           working-dir: FMC/Azure/Terraform/standalone
#           output-file: USAGE.md
#           template: |-
#             <!-- BEGIN_TF_DOCS -->
#             # Test tf11 basic
#             ## Verify
#             Should use the template defined instead of the default
#             Should inject the table under usage
#             # Usage
#             {{ .Content }}
#             <!-- END_TF_DOCS -->
#           indention: 3    
#       - name: Should generate README.md for tf12_inject and push up all changes
#         uses: actions/checkout@v2
#         with:
#           working-dir: FMC/Azure/Terraform/standalone
#           args: --sort-by required
#           indention: 3
#           git-push: true
#           git-push-sign-off: true
#           git-commit-message: "terraform-docs: automated action"
